// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  name      String
  bio       String?  @db.Text
  email     String?  @unique
  avatarUrl String?
  createdAt DateTime @default(now())

  accounts      Account[]
  sessions      Session[]
  timeIntervals UserTimeInterval[]
  Scheduling    Scheduling[]

  @@map("users")
}

model Account {
  id                   String  @id @default(cuid())
  userId               String
  providerType         String
  provider             String
  providerAccountId    String
  refreshToken         String? @db.Text
  accessToken          String? @db.Text
  accessTokenExpiresAt Int?
  tokenType            String?
  scope                String?
  idToken              String? @db.Text
  sessionState         String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model UserTimeInterval {
  id                 String @id @default(uuid())
  weekDay            Int
  timeStartInMinutes Int
  timeEndInMinutes   Int

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("user_time_intervals")
}

model Scheduling {
  id           String   @id @default(uuid())
  date         DateTime
  name         String
  email        String
  observations String?
  createdAt    DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("schedulings")
}
